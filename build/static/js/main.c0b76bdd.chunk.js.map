{"version":3,"sources":["AddTestImages.js","AddCorrectSolution.js","SolutionItem.js","EditCorretSolution.js","CorrectSolutionsList.js","AddTestSolutionForm.js","GraderResults.js","App.js","reportWebVitals.js","index.js"],"names":["Container","styled","div","props","isDragAccept","isDragReject","isDragActive","getColor","AddTestImages","parentProps","onDrop","useCallback","acceptedFiles","parentCallback","useDropzone","accept","getRootProps","getInputProps","Fragment","Typography","variant","gutterBottom","className","AddCorrectSolution","inputRef","React","createRef","errorRef","handleSubmit","e","console","log","current","value","preventDefault","classList","add","remove","addToList","currentTarget","reset","onSubmit","this","style","display","Input","placeholder","type","inputProps","onChange","handleChange","marginLeft","marginRight","width","Button","color","ref","Component","styles","Icon","Paper","margin","padding","alignItems","marginTop","numbering","fontWeight","answer","SolutionItem","state","fade","gridRef","deleteAnswer","setState","Promise","resolve","reject","setTimeout","then","index","gridClass","Grid","xs","item","elevation","IconButton","aria-label","onClick","updateAnswer","Edit","fontSize","Delete","EditCorretSolution","saveAnswer","defaultValue","Save","CorrectSolutionsList","renderAnswer","key","list","container","Object","keys","map","AddTestSolutionForm","listSize","_","size","answersSolutionsList","status","numberOfQuestions","handleNumberOfQuestionsChange","bind","event","target","spacing","md","TextField","required","fullWidth","id","label","useStyles","makeStyles","theme","listItem","total","title","GraderResults","classes","data","List","disablePadding","answers","ListItem","ListItemText","primary","question","toString","toUpperCase","Divider","total_correct","total_wrong","appBar","position","background","footer","layout","breakpoints","up","paper","marginBottom","stepper","buttons","justifyContent","button","steps","App","useState","testImages","setTestImages","isSubmit","setIsSubmit","testSolutionInfo","setTestSolutionInfo","checkerResults","setCheckerResults","activeStep","setActiveStep","AddTestImagesCallback","SetTestSolutionInfoCallback","testSolution","CssBaseline","AppBar","Toolbar","noWrap","Stepper","Step","StepLabel","length","step","Error","getStepContent","formData","FormData","alert","parseInt","append","name","options","headers","method","body","fetch","res","json","currID","setInterval","a","new_data","clearInterval","disabled","maxWidth","align","Date","getFullYear","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"yYAkBMA,EAAYC,IAAOC,IAAV,sUAQG,SAAAC,GAAK,OArBN,SAACA,GAChB,OAAIA,EAAMC,aACC,UAEPD,EAAME,aACC,UAEPF,EAAMG,aACC,UAEJ,UAWkBC,CAASJ,MAQrB,SAASK,EAAcL,GAClC,IAAMM,EAAW,eAAON,GAClBO,EAASC,uBAAY,SAAAC,GACzBH,EAAYI,eAAeD,EAAc,MAEtC,CAACH,IALmC,EAavCK,YAAY,CAACC,OAAQ,UAAUL,WALjCM,EARyC,EAQzCA,aACAC,EATyC,EASzCA,cACAX,EAVyC,EAUzCA,aACAF,EAXyC,EAWzCA,aACAC,EAZyC,EAYzCA,aAGF,OACE,eAAC,IAAMa,SAAP,WACA,cAACC,EAAA,EAAD,CAAYC,QAAQ,KAAKC,cAAY,EAArC,oCAGA,qBAAKC,UAAU,YAAf,SACE,eAAC,EAAD,2BAAeN,EAAa,CAACV,eAAcF,eAAcC,kBAAzD,cACE,qCAAWY,MACX,wFACA,0F,uECROM,G,kNA5CbC,SAAWC,IAAMC,Y,EACjBC,SAAWF,IAAMC,Y,EACjBE,aAAe,SAAAC,GAGb,GAFAC,QAAQC,IAAI,EAAKP,SAASQ,QAAQC,OAClCJ,EAAEK,iBACkC,KAAhC,EAAKV,SAASQ,QAAQC,MAExB,OADA,EAAKN,SAASK,QAAQG,UAAUC,IAAI,UAC7B,KAET,EAAKT,SAASK,QAAQG,UAAUE,OAAO,UAEvC,EAAKlC,MAAMmC,UAAU,EAAKd,SAASQ,QAAQC,OAC3CJ,EAAEU,cAAcC,S,4CAElB,WACE,OACE,uBAAMC,SAAUC,KAAKd,aAAce,MAAO,CAAEC,QAAS,QAArD,UACE,cAACC,EAAA,EAAD,CACEC,YAAY,kBACZC,KAAK,SACLC,WAAY,CACV,aAAc,eAEhBC,SAAUP,KAAKQ,aACf1B,SAAUkB,KAAKlB,SACfmB,MAAO,CAAEQ,WAAY,OAAOC,YAAa,OAAOC,MAAO,SAGzD,cAACC,EAAA,EAAD,CACEP,KAAK,SACL3B,QAAQ,YACRmC,MAAM,UAHR,iBAQA,mBAAGC,IAAKd,KAAKf,SAAUL,UAAU,QAAjC,+C,GArCyBmC,c,2BCA3BC,EAAS,CACbC,KAAM,CACJR,WAAY,QAEdS,MAAO,CACLC,OAAQ,OACRC,QAAS,GACTlB,QAAS,OACTmB,WAAY,SACZC,UAAW,GACXX,MAAO,KAETY,UAAW,CACTC,WAAY,OACZd,YAAa,IAEfe,OAAQ,CACNZ,MAAO,UA4DIa,E,4MAvDbC,MAAQ,CACNC,MAAM,G,EAGRC,QAAU9C,IAAMC,Y,EAEhB8C,aAAe,WAEb,EAAKC,SAAS,CAAEH,MADH,IAGC,IAAII,SAAQ,SAAUC,EAASC,GAC3CC,YAAW,WACTF,GAAQ,KACP,QAGGG,MAAK,kBAAM,EAAK3E,MAAMqE,aAAa,EAAKrE,MAAM4E,UACtDjD,QAAQC,IAAI,EAAKsC,Q,4CAGnB,WAAU,IAAD,OACDW,EAAYtC,KAAK2B,MAAMC,KAAO,WAAa,GAEjD,OACE,cAACW,EAAA,EAAD,CACEC,GAAI,GACJ5D,UAAS,UAAK0D,GACdG,MAAI,EAEJ3B,IAAKd,KAAK6B,QALZ,SAOE,eAACX,EAAA,EAAD,CAAOwB,UAAW,EAAGzC,MAAOe,EAAOE,MAAnC,UACE,uBAAMjB,MAAOe,EAAOO,UAApB,UAAgCvB,KAAKvC,MAAM4E,MAA3C,OACA,uBAAMpC,MAAOe,EAAOS,OAApB,cAA8BzB,KAAKvC,MAAMgE,UACzC,cAACkB,EAAA,EAAD,CACE9B,MAAM,UACN+B,aAAW,OACX3C,MAAOe,EAAOC,KACd4B,QAAS,kBAAM,EAAKpF,MAAMqF,aAAa,EAAKrF,MAAM4E,QAJpD,SAME,cAACU,EAAA,EAAD,CAAMC,SAAS,YAEjB,cAACL,EAAA,EAAD,CACE9B,MAAM,YACN+B,aAAW,SACXC,QAAS7C,KAAK8B,aAHhB,SAKE,cAACmB,EAAA,EAAD,CAAQD,SAAS,gBAnBhBhD,KAAKvC,MAAM4E,W,GA7BGtB,a,SCpBrBC,EAAS,CACbC,KAAM,CACJR,WAAY,OACZE,MAAO,OAETO,MAAO,CACLC,OAAQ,OACRC,QAAS,GACTC,WAAY,SACZC,UAAW,GACXX,MAAO,MAwCIuC,E,4MAnCbpE,SAAWC,IAAMC,Y,4CACjB,WAAU,IAAD,OACP,OACE,cAACuD,EAAA,EAAD,CAAMC,GAAI,GAAIC,MAAI,EAAlB,SACE,cAACvB,EAAA,EAAD,CAAOwB,UAAW,EAAGzC,MAAOe,EAAOE,MAAnC,SACE,uBACEnB,SAAU,WACR,EAAKtC,MAAM0F,WACT,EAAK1F,MAAM4E,MACX,EAAKvD,SAASQ,QAAQC,QAG1BU,MAAO,CAAEC,QAAS,QAPpB,UASE,cAACC,EAAA,EAAD,CACEF,MAAO,CAAEU,MAAO,OAChBN,KAAO,SACP+C,aAAcpD,KAAKvC,MAAMgE,OACzB3C,SAAUkB,KAAKlB,WAEjB,cAAC6D,EAAA,EAAD,CACEtC,KAAK,SACLQ,MAAM,UACN+B,aAAW,MACX3C,MAAOe,EAAOC,KAJhB,SAME,cAACoC,EAAA,EAAD,CAAML,SAAS,kBAvBChD,KAAKvC,MAAM4E,W,GAJRtB,aCkBlBuC,E,4MAhCbC,aAAe,SAAAC,GACb,OAA4B,MAAxB,EAAK/F,MAAMgG,KAAKD,GAAqB,KACF,WAAnC,EAAK/F,MAAMgG,KAAKD,GAAhB,OAEA,cAAC,EAAD,CAEEnB,MAAOmB,EACP/B,OAAQ,EAAKhE,MAAMgG,KAAKD,GAAhB,OACR1B,aAAc,EAAKrE,MAAMqE,aACzBgB,aAAc,EAAKrF,MAAMqF,cAJpBU,GAOmC,YAAnC,EAAK/F,MAAMgG,KAAKD,GAAhB,OAEP,cAAC,EAAD,CAEEnB,MAAOmB,EACP/B,OAAQ,EAAKhE,MAAMgG,KAAKD,GAAhB,OACRL,WAAY,EAAK1F,MAAM0F,YAHlBK,QAHJ,G,4CAWT,WAAU,IAAD,OACP,OACE,cAACjB,EAAA,EAAD,CAAMmB,WAAS,EAAf,SACGC,OAAOC,KAAK5D,KAAKvC,MAAMgG,MAAMI,KAAI,SAAAL,GAAG,OAAI,EAAKD,aAAaC,Y,GA3BhCzE,IAAMgC,W,iBCGpB+C,E,kDACnB,WAAYrG,GAAQ,IAAD,8BACjB,cAAMA,IAkBRmC,UAAY,SAAC6B,GACX,IAAIsC,EAAWC,IAAEC,KAAK,EAAKtC,MAAMuC,sBAAwB,EACrDT,EAAI,eAAQ,EAAK9B,MAAMuC,sBAC3BT,EAAKM,GAAY,CACftC,OAAQA,EACR0C,OAAQ,UAEV,EAAKpC,SAAS,CAAEmC,qBAAsBT,IACtC,EAAKhG,MAAMU,eAAe,CACxBiG,kBAAmB,EAAKzC,MAAMyC,kBAC9BF,qBAAsBT,KA7BP,EAiCnB3B,aAAe,SAAC0B,GACd,IAAIC,EAAI,eAAQ,EAAK9B,MAAMuC,sBAC3BT,EAAKD,GAAO,KAEZ,EAAKzB,SAAS,CAAEmC,qBAAsBT,IACtC,EAAKhG,MAAMU,eAAe,CACxBiG,kBAAmB,EAAKzC,MAAMyC,kBAC9BF,qBAAsBT,KAxCP,EA2CnBX,aAAe,SAACU,GACd,IAAIC,EAAI,eAAQ,EAAK9B,MAAMuC,sBAC3BT,EAAKD,GAAL,OAAsB,UAEtB,EAAKzB,SAAS,CAAEmC,qBAAsBT,IAClC,EAAKhG,MAAMU,eAAe,CAC5BiG,kBAAmB,EAAKzC,MAAMyC,kBAC9BF,qBAAsBT,KAlDP,EAqDnBN,WAAa,SAACK,EAAK/B,GACjB,IAAIgC,EAAI,eAAQ,EAAK9B,MAAMuC,sBAC3BT,EAAKD,GAAO,CACV/B,OAAQA,EACR0C,OAAQ,UAGV,EAAKpC,SAAS,CAAEmC,qBAAsBT,IACtC,EAAKhG,MAAMU,eAAe,CACxBiG,kBAAmB,EAAKzC,MAAMyC,kBAC9BF,qBAAsBT,KA7DxB,EAAK9B,MAAQ,CACXyC,kBAAmB,EACnBF,qBAAsB,IAGxB,EAAKG,8BAAgC,EAAKA,8BAA8BC,KAAnC,gBAPpB,E,iEAWnB,SAA8BC,GAC5BvE,KAAK+B,SAAS,CAACqC,kBAAmBG,EAAMC,OAAOjF,QAC/CS,KAAKvC,MAAMU,eAAe,CACxBiG,kBAAmBG,EAAMC,OAAOjF,MAChC2E,qBAAsBlE,KAAK2B,MAAMuC,yB,oBAqDrC,WACE,OACA,eAAC,IAAM1F,SAAP,WACE,cAACC,EAAA,EAAD,CAAYC,QAAQ,KAAKC,cAAY,EAArC,qDAGA,eAAC4D,EAAA,EAAD,CAAMmB,WAAS,EAACe,QAAS,EAAzB,UACE,cAAClC,EAAA,EAAD,CAAME,MAAI,EAACD,GAAI,GAAIkC,GAAI,GAAvB,SACA,cAACC,EAAA,EAAD,CAAWC,UAAQ,EAACvE,KAAK,SAASwE,WAAS,EAACC,GAAG,iBAAiBC,MAAM,8BAA8BxF,MAAOS,KAAK2B,MAAMyC,kBAAmB7D,SAAUP,KAAKqE,kCAExJ,eAAC9B,EAAA,EAAD,CAAMmB,WAAS,EAACe,QAAS,EAAzB,UACE,cAAClC,EAAA,EAAD,CAAME,MAAI,EAACD,GAAI,GAAf,SACI,cAAC,EAAD,CAAoB5C,UAAWI,KAAKJ,cAEtC,cAAC,EAAD,CACEkC,aAAc9B,KAAK8B,aACnB2B,KAAMzD,KAAK2B,MAAMuC,qBACjBpB,aAAc9C,KAAK8C,aACnBK,WAAYnD,KAAKmD,0B,GAvFkBpC,a,sCCC3CiE,GAAYC,aAAW,SAACC,GAAD,MAAY,CACvCC,SAAU,CACR/D,QAAS8D,EAAMT,QAAQ,EAAG,IAE5BW,MAAO,CACL5D,WAAY,KAEd6D,MAAO,CACL/D,UAAW4D,EAAMT,QAAQ,QAGd,SAASa,GAAc7H,GACpC,IAAM8H,EAAUP,KACVjH,EAAW,eAAON,GACxB,OAAGM,EAAYyH,MAAQzH,EAAYyH,OAAS,GAGxC,eAAC,IAAMhH,SAAP,WACQ,cAACC,EAAA,EAAD,CAAYC,QAAQ,KAAKC,cAAY,EAArC,qBAGN,eAAC8G,EAAA,EAAD,CAAMC,gBAAc,EAApB,UACC3H,EAAYyH,KAAKG,QAAQ9B,KAAI,SAACpC,GAAD,OAC5B,eAACmE,EAAA,EAAD,CAAUhH,UAAW2G,EAAQJ,SAA7B,UACA,cAACU,GAAA,EAAD,CAAcC,QAAS,aAAerE,EAAOsE,WAC7C,cAACtH,EAAA,EAAD,CAAYC,QAAQ,YAAYE,UAAW2G,EAAQH,MAAnD,UACqB,GAAjB3D,EAAOA,QAAauE,WAAWC,sBAIrC,cAACC,GAAA,EAAD,IACE,eAACN,EAAA,EAAD,CAAUhH,UAAW2G,EAAQJ,SAA7B,UACE,cAACU,GAAA,EAAD,CAAcC,QAAQ,kBACtB,cAACrH,EAAA,EAAD,CAAYC,QAAQ,YAAYE,UAAW2G,EAAQH,MAAnD,SACGrH,EAAYyH,KAAKW,mBAGtB,eAACP,EAAA,EAAD,CAAUhH,UAAW2G,EAAQJ,SAA7B,UACE,cAACU,GAAA,EAAD,CAAcC,QAAQ,gBACtB,cAACrH,EAAA,EAAD,CAAYC,QAAQ,YAAYE,UAAW2G,EAAQH,MAAnD,SACCrH,EAAYyH,KAAKY,uBAQ1B,cAAC,IAAM5H,SAAP,sBCvCJ,IAAMwG,GAAYC,aAAW,SAACC,GAAD,MAAY,CACvCmB,OAAQ,CACNC,SAAU,WACVC,WAAY,UACZ1F,MAAO,QACPQ,WAAY,UAEdmF,OAAQ,CACNpF,QAAS8D,EAAMT,QAAQ,EAAG,GAC1BnD,UAAW,OACXiF,WAAY,UACZ1F,MAAO,SAET4F,OAAO,aACL9F,MAAO,OACPF,WAAYyE,EAAMT,QAAQ,GAC1B/D,YAAawE,EAAMT,QAAQ,IAC1BS,EAAMwB,YAAYC,GAAG,IAAyB,EAAnBzB,EAAMT,QAAQ,IAAU,CAClD9D,MAAO,IACPF,WAAY,OACZC,YAAa,SAGjBkG,MAAM,aACJtF,UAAW4D,EAAMT,QAAQ,GACzBoC,aAAc3B,EAAMT,QAAQ,GAC5BrD,QAAS8D,EAAMT,QAAQ,IACtBS,EAAMwB,YAAYC,GAAG,IAAyB,EAAnBzB,EAAMT,QAAQ,IAAU,CAClDnD,UAAW4D,EAAMT,QAAQ,GACzBoC,aAAc3B,EAAMT,QAAQ,GAC5BrD,QAAS8D,EAAMT,QAAQ,KAG3BqC,QAAS,CACP1F,QAAS8D,EAAMT,QAAQ,EAAG,EAAG,IAE/BsC,QAAS,CACP7G,QAAS,OACT8G,eAAgB,YAElBC,OAAQ,CACN3F,UAAW4D,EAAMT,QAAQ,GACzBhE,WAAYyE,EAAMT,QAAQ,QAIxByC,GAAQ,CAAC,eAAgB,kBAAmB,WAkLnCC,OAhLf,WAAgB,IAAD,EACuBpI,IAAMqI,SAAS,GADtC,mBACNC,EADM,KACMC,EADN,OAEmBvI,IAAMqI,SAAS,GAFlC,mBAENG,EAFM,KAEIC,EAFJ,OAGmCzI,IAAMqI,SAAS,IAHlD,mBAGNK,EAHM,KAGYC,EAHZ,OAI+B3I,IAAMqI,SAAS,IAJ9C,mBAINO,EAJM,KAIUC,EAJV,KAKPrC,EAAUP,KALH,EAMuBjG,IAAMqI,SAAS,GANtC,mBAMNS,EANM,KAMMC,EANN,KAQPC,EAAwB,SAACV,GAC7BC,EAAcD,IAEVW,EAA8B,SAACC,GACnCP,EAAoBO,IAyFtB,OACE,qBAAKrJ,UAAU,MAAf,SACE,eAAC,IAAMJ,SAAP,WACE,cAAC0J,EAAA,EAAD,IACA,cAACC,EAAA,EAAD,CAAQ7B,SAAS,WAAWzF,MAAM,UAAUjC,UAAW2G,EAAQc,OAA/D,SACE,cAAC+B,EAAA,EAAD,UACE,cAAC3J,EAAA,EAAD,CAAYC,QAAQ,KAAKmC,MAAM,UAAUwH,QAAM,EAA/C,mDAKJ,sBAAMzJ,UAAW2G,EAAQkB,OAAzB,SACE,eAACvF,EAAA,EAAD,CAAOtC,UAAW2G,EAAQqB,MAA1B,UACE,cAAC0B,EAAA,EAAD,CAAST,WAAYA,EAAYjJ,UAAW2G,EAAQuB,QAApD,SACGI,GAAMrD,KAAI,SAACkB,GAAD,OACT,cAACwD,EAAA,EAAD,UACE,cAACC,EAAA,EAAD,UAAYzD,KADHA,QAKf,cAAC,IAAMvG,SAAP,UACGqJ,IAAeX,GAAMuB,OACpB,eAAC,IAAMjK,SAAP,WACE,cAACC,EAAA,EAAD,CAAYC,QAAQ,KAAKC,cAAY,EAArC,sEAGA,cAACiC,EAAA,EAAD,CACMlC,QAAQ,YACRmC,MAAM,UACNgC,QAxCH,WACjByE,EAAc,GACdI,EAAoB,IACpBE,EAAkB,IAClBE,EAAc,GACdN,EAAY,IAoCQ5I,UAAW2G,EAAQ0B,OAJzB,sBAUA,eAAC,IAAMzI,SAAP,WA3HhB,SAAwBkK,GACtB,OAAQA,GACN,KAAK,EACH,OAAO,cAAC5K,EAAD,CAAeK,eAAgB4J,IACxC,KAAK,EACH,OAAO,cAAC,EAAD,CAAqB5J,eAAgB6J,IAC9C,KAAK,EACH,OAAO,cAAC1C,GAAD,CAAeE,KAAMmC,IAC9B,QACE,MAAM,IAAIgB,MAAM,iBAmHHC,CAAef,GAChB,sBAAKjJ,UAAW2G,EAAQwB,QAAxB,UACkB,IAAfc,GAAmC,IAAfA,GACnB,cAACjH,EAAA,EAAD,CAAQiC,QA5CX,WACjBiF,EAAcD,EAAa,IA2CsBjJ,UAAW2G,EAAQ0B,OAAhD,kBAIF,cAACrG,EAAA,EAAD,CACElC,QAAQ,YACRmC,MAAM,UACNgC,QA1HH,WACjB,GAAIgF,IAAeX,GAAMuB,OAAS,EAAG,CAEnC,IAAII,EAAW,IAAIC,SACnB,GAA0C,OAAvCrB,EAAiBrD,mBAAqE,IAAvCqD,EAAiBrD,kBAG/D,YADA2E,MAAM,oDAGV,GAA6C,OAA1CtB,EAAiBvD,sBAAiCuD,EAAiBvD,uBAAyB,IAAMF,IAAEC,KAAKwD,EAAiBvD,wBAA0B8E,SAASvB,EAAiBrD,mBAG7K,YADA2E,MAAM,gEAIV,IAAK,IAAIvF,KADTqF,EAASI,OAAO,kBAAmBxB,EAAiBrD,mBACpCqD,EAAiBvD,qBAC/B2E,EAASI,OAAOzF,EAAKiE,EAAiBvD,qBAAqBV,GAAK/B,QAElEoH,EAASI,OAAO,SAAU5B,EAAYA,EAAW6B,MACjD,IAAMC,EAAU,CACdC,QAAS,CACP,OAAU,oBAEZC,OAAQ,OACRC,KAAMT,GAERrB,EAAY,GAEZ+B,MAAM,iBAAkBJ,GAAS/G,MAAK,SAAAoH,GAAG,OAAIA,EAAIC,UAAQrH,MAAK,SAAAoD,GACxD,IAAMkE,EAASC,YAAW,sBAAC,8BAAAC,EAAA,sEACTL,MAAM,sBAAuB/D,EAAI,QAAa,CAC/D4D,QAAU,CACT,eAAgB,mBAChB,OAAU,sBAJe,cACrBI,EADqB,gBAMJA,EAAIC,OANA,OAOA,aADrBI,EANqB,QAOd,QACTjC,EAAkBiC,EAAQ,QAC1BrC,EAAY,GACZsC,cAAcJ,GACd5B,EAAcD,EAAa,IAEC,eAAtBgC,EAAQ,SAEdC,cAAcJ,GACdX,MAAM,qCAhBiB,2CAkBxB,QAIX,GAAIlB,IAAeX,GAAMuB,OAAS,EAAG,CACrC,GAAkB,OAAfpB,GAAsC,IAAfA,EAGpB,YADA0B,MAAM,4CAGVjB,EAAcD,EAAa,GAEzBA,IAAeX,GAAMuB,OAAS,GAChCX,EAAcD,EAAa,IA+DTjJ,UAAW2G,EAAQ0B,OACnB8C,SAAUxC,EALZ,SAQGM,IAAeX,GAAMuB,OAAS,EAAI,SAAW,sBAS9D,wBAAQ7J,UAAW2G,EAAQiB,OAA3B,SACE,cAAClJ,EAAA,EAAD,CAAW0M,SAAS,KAApB,SACE,eAACvL,EAAA,EAAD,CAAYC,QAAQ,QAAQmC,MAAM,UAAUoJ,MAAM,SAAlD,UACG,iCACA,IAAIC,MAAOC,cACX,iBC7NAC,GAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBlI,MAAK,YAAkD,IAA/CmI,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,GAAD,MAEFC,SAASC,eAAe,SAM1BZ,O","file":"static/js/main.c0b76bdd.chunk.js","sourcesContent":["import React, {useCallback } from 'react';\r\nimport {useDropzone} from 'react-dropzone';\r\nimport styled from 'styled-components';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nconst getColor = (props) => {\r\n  if (props.isDragAccept) {\r\n      return '#00e676';\r\n  }\r\n  if (props.isDragReject) {\r\n      return '#ff1744';\r\n  }\r\n  if (props.isDragActive) {\r\n      return '#2196f3';\r\n  }\r\n  return '#eeeeee';\r\n}\r\n\r\nconst Container = styled.div`\r\n  flex: 1;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  padding: 20px;\r\n  border-width: 2px;\r\n  border-radius: 2px;\r\n  border-color: ${props => getColor(props)};\r\n  border-style: dashed;\r\n  background-color: #fafafa;\r\n  color: #bdbdbd;\r\n  outline: none;\r\n  transition: border .24s ease-in-out;\r\n`;  \r\n\r\nexport default function AddTestImages(props) {\r\n    const parentProps = {...props};\r\n    const onDrop = useCallback(acceptedFiles => {\r\n      parentProps.parentCallback(acceptedFiles[0]);\r\n\r\n      }, [parentProps]);\r\n    \r\n  const {\r\n    getRootProps,\r\n    getInputProps,\r\n    isDragActive,\r\n    isDragAccept,\r\n    isDragReject\r\n  } = useDropzone({accept: 'image/*',onDrop});\r\n  \r\n  return (\r\n    <React.Fragment>\r\n    <Typography variant=\"h6\" gutterBottom>\r\n      Upload images to check\r\n    </Typography>\r\n    <div className=\"container\">\r\n      <Container {...getRootProps({isDragActive, isDragAccept, isDragReject})}>\r\n        <input {...getInputProps()} />\r\n        <p>Drag 'n' drop some files here, or click to select files</p>\r\n        <em>(Only *.jpeg and *.png images will be accepted)</em>\r\n      </Container>\r\n    </div>\r\n    </React.Fragment>\r\n  );\r\n};\r\n","import React, { Component } from \"react\";\r\nimport Input from \"@material-ui/core/Input\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport './App.css';\r\n\r\nclass AddCorrectSolution extends Component {\r\n  inputRef = React.createRef();\r\n  errorRef = React.createRef();\r\n  handleSubmit = e => {\r\n    console.log(this.inputRef.current.value);\r\n    e.preventDefault();\r\n    if (this.inputRef.current.value === \"\") {\r\n      this.errorRef.current.classList.add(\"active\");\r\n      return null;\r\n    }\r\n    this.errorRef.current.classList.remove(\"active\");\r\n\r\n    this.props.addToList(this.inputRef.current.value);\r\n    e.currentTarget.reset();\r\n  };\r\n  render() {\r\n    return (\r\n      <form onSubmit={this.handleSubmit} style={{ display: \"flex\" }}>\r\n        <Input\r\n          placeholder=\"Solution number\"\r\n          type=\"number\"\r\n          inputProps={{\r\n            \"aria-label\": \"Description\"\r\n          }}\r\n          onChange={this.handleChange}\r\n          inputRef={this.inputRef}\r\n          style={{ marginLeft: \"10px\",marginRight: \"30px\",width: \"80%\" }}\r\n        />\r\n\r\n        <Button\r\n          type=\"submit\"\r\n          variant=\"contained\"\r\n          color=\"primary\"\r\n        >\r\n          Add\r\n        </Button>\r\n\r\n        <p ref={this.errorRef} className=\"error\">\r\n          Error, must enter a value!\r\n        </p>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nexport default AddCorrectSolution;\r\n","import React, { Component } from \"react\";\r\nimport { Delete, Edit } from \"@material-ui/icons\";\r\nimport { Grid, Paper } from \"@material-ui/core\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\n\r\nconst styles = {\r\n  Icon: {\r\n    marginLeft: \"auto\"\r\n  },\r\n  Paper: {\r\n    margin: \"auto\",\r\n    padding: 10,\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    marginTop: 10,\r\n    width: 500\r\n  },\r\n  numbering: {\r\n    fontWeight: \"bold\",\r\n    marginRight: 10\r\n  },\r\n  answer: {\r\n    color: \"black\",\r\n  }\r\n};\r\n\r\nclass SolutionItem extends Component {\r\n  state = {\r\n    fade: false\r\n  };\r\n\r\n  gridRef = React.createRef();\r\n\r\n  deleteAnswer = () => {\r\n    const fade = true;\r\n    this.setState({ fade });\r\n\r\n    var promise = new Promise(function (resolve, reject) {\r\n      setTimeout(function () {\r\n        resolve(true);\r\n      }, 500);\r\n    });\r\n\r\n    promise.then(() => this.props.deleteAnswer(this.props.index));\r\n    console.log(this.state);\r\n  };\r\n\r\n  render() {\r\n    const gridClass = this.state.fade ? \"fade-out\" : \"\";\r\n\r\n    return (\r\n      <Grid\r\n        xs={12}\r\n        className={`${gridClass}`}\r\n        item\r\n        key={this.props.index}\r\n        ref={this.gridRef}\r\n      >\r\n        <Paper elevation={2} style={styles.Paper}>\r\n          <span style={styles.numbering}>{this.props.index})</span>\r\n          <span style={styles.answer}> {this.props.answer}</span>\r\n          <IconButton\r\n            color=\"primary\"\r\n            aria-label=\"Edit\"\r\n            style={styles.Icon}\r\n            onClick={() => this.props.updateAnswer(this.props.index)}\r\n          >\r\n            <Edit fontSize=\"small\" />\r\n          </IconButton>\r\n          <IconButton\r\n            color=\"secondary\"\r\n            aria-label=\"Delete\"\r\n            onClick={this.deleteAnswer}\r\n          >\r\n            <Delete fontSize=\"small\" />\r\n          </IconButton>\r\n        </Paper>\r\n      </Grid>\r\n    );\r\n  }\r\n}\r\n\r\nexport default SolutionItem;\r\n","import React, { Component } from \"react\";\r\nimport { Save } from \"@material-ui/icons\";\r\nimport { Grid, Paper } from \"@material-ui/core\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport Input from \"@material-ui/core/Input\";\r\n\r\nconst styles = {\r\n  Icon: {\r\n    marginLeft: \"auto\",\r\n    width: \"10%\"\r\n  },\r\n  Paper: {\r\n    margin: \"auto\",\r\n    padding: 10,\r\n    alignItems: \"center\",\r\n    marginTop: 10,\r\n    width: 500\r\n  }\r\n};\r\n\r\nclass EditCorretSolution extends Component {\r\n  inputRef = React.createRef();\r\n  render() {\r\n    return (\r\n      <Grid xs={12} item key={this.props.index}>\r\n        <Paper elevation={2} style={styles.Paper}>\r\n          <form\r\n            onSubmit={() => {\r\n              this.props.saveAnswer(\r\n                this.props.index,\r\n                this.inputRef.current.value\r\n              );\r\n            }}\r\n            style={{ display: \"flex\" }}\r\n          >\r\n            <Input\r\n              style={{ width: \"90%\" }}\r\n              type = \"number\"\r\n              defaultValue={this.props.answer}\r\n              inputRef={this.inputRef}\r\n            />\r\n            <IconButton\r\n              type=\"submit\"\r\n              color=\"primary\"\r\n              aria-label=\"Add\"\r\n              style={styles.Icon}\r\n            >\r\n              <Save fontSize=\"small\" />\r\n            </IconButton>\r\n          </form>\r\n        </Paper>\r\n      </Grid>\r\n    );\r\n  }\r\n}\r\n\r\nexport default EditCorretSolution;\r\n","import React from \"react\";\r\nimport SolutionItem from \"./SolutionItem\";\r\nimport EditCorretSolution from \"./EditCorretSolution\";\r\nimport { Grid } from \"@material-ui/core\";\r\n\r\nclass CorrectSolutionsList extends React.Component {\r\n  renderAnswer = key => {\r\n    if (this.props.list[key] == null) return null;\r\n    if (this.props.list[key][\"status\"] === \"active\") {\r\n      return (\r\n        <SolutionItem\r\n          key={key}\r\n          index={key}\r\n          answer={this.props.list[key][\"answer\"]}\r\n          deleteAnswer={this.props.deleteAnswer}\r\n          updateAnswer={this.props.updateAnswer}\r\n        />\r\n      );\r\n    } else if (this.props.list[key][\"status\"] === \"editing\") {\r\n      return (\r\n        <EditCorretSolution\r\n          key={key}\r\n          index={key}\r\n          answer={this.props.list[key][\"answer\"]}\r\n          saveAnswer={this.props.saveAnswer}\r\n        />\r\n      );\r\n    }\r\n  };\r\n  render() {\r\n    return (\r\n      <Grid container>\r\n        {Object.keys(this.props.list).map(key => this.renderAnswer(key))}\r\n      </Grid>\r\n    );\r\n  }\r\n}\r\n\r\nexport default CorrectSolutionsList;\r\n","import React, { Component } from 'react';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport AddCorrectSolution from \"./AddCorrectSolution\";\r\nimport CorrectSolutionsList from \"./CorrectSolutionsList\";\r\nimport _ from 'lodash';\r\n\r\nexport default class AddTestSolutionForm extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      numberOfQuestions: 0,\r\n      answersSolutionsList: {},\r\n    };\r\n\r\n    this.handleNumberOfQuestionsChange = this.handleNumberOfQuestionsChange.bind(this);\r\n  }\r\n  \r\n\r\n  handleNumberOfQuestionsChange(event) {\r\n    this.setState({numberOfQuestions: event.target.value});\r\n    this.props.parentCallback({\r\n      numberOfQuestions: event.target.value,\r\n      answersSolutionsList: this.state.answersSolutionsList\r\n    });\r\n  }\r\n\r\n  addToList = (answer) => {\r\n    let listSize = _.size(this.state.answersSolutionsList) + 1;\r\n    let list = { ...this.state.answersSolutionsList };\r\n    list[listSize] = {\r\n      answer: answer,\r\n      status: \"active\"\r\n    };\r\n    this.setState({ answersSolutionsList: list });\r\n    this.props.parentCallback({\r\n      numberOfQuestions: this.state.numberOfQuestions,\r\n      answersSolutionsList: list\r\n    });\r\n\r\n  };\r\n  deleteAnswer = (key) => {\r\n    let list = { ...this.state.answersSolutionsList };\r\n    list[key] = null;\r\n\r\n    this.setState({ answersSolutionsList: list });\r\n    this.props.parentCallback({\r\n      numberOfQuestions: this.state.numberOfQuestions,\r\n      answersSolutionsList: list\r\n    });\r\n  };\r\n  updateAnswer = (key) => {\r\n    let list = { ...this.state.answersSolutionsList };\r\n    list[key][\"status\"] = \"editing\";\r\n\r\n    this.setState({ answersSolutionsList: list });\r\n        this.props.parentCallback({\r\n      numberOfQuestions: this.state.numberOfQuestions,\r\n      answersSolutionsList: list\r\n    });\r\n  };\r\n  saveAnswer = (key, answer) => {\r\n    let list = { ...this.state.answersSolutionsList };\r\n    list[key] = {\r\n      answer: answer,\r\n      status: \"active\"\r\n    };\r\n\r\n    this.setState({ answersSolutionsList: list });\r\n    this.props.parentCallback({\r\n      numberOfQuestions: this.state.numberOfQuestions,\r\n      answersSolutionsList: list\r\n    });\r\n  };\r\n\r\n\r\n  render (){\r\n    return (\r\n    <React.Fragment>\r\n      <Typography variant=\"h6\" gutterBottom>\r\n        Fill the correct solutions for the test\r\n      </Typography>\r\n      <Grid container spacing={3}>\r\n        <Grid item xs={12} md={12}>\r\n        <TextField required type=\"number\" fullWidth id=\"standard-basic\" label=\"Number of questions In test\" value={this.state.numberOfQuestions} onChange={this.handleNumberOfQuestionsChange}/>\r\n        </Grid>\r\n        <Grid container spacing={0}>\r\n          <Grid item xs={12}>\r\n              <AddCorrectSolution addToList={this.addToList} />\r\n          </Grid>\r\n            <CorrectSolutionsList\r\n              deleteAnswer={this.deleteAnswer}\r\n              list={this.state.answersSolutionsList}\r\n              updateAnswer={this.updateAnswer}\r\n              saveAnswer={this.saveAnswer}\r\n            />\r\n        </Grid>\r\n      </Grid> \r\n    </React.Fragment>\r\n    );\r\n  }\r\n}","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport Divider from '@material-ui/core/Divider';\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  listItem: {\r\n    padding: theme.spacing(1, 0),\r\n  },\r\n  total: {\r\n    fontWeight: 700,\r\n  },\r\n  title: {\r\n    marginTop: theme.spacing(2),\r\n  },\r\n}));\r\nexport default function GraderResults(props) {\r\n  const classes = useStyles();\r\n  const parentProps = {...props};\r\n  if(parentProps.data && parentProps.data !== {})\r\n  {\r\n    return (\r\n      <React.Fragment>\r\n              <Typography variant=\"h6\" gutterBottom>\r\n          Results\r\n        </Typography>\r\n        <List disablePadding>\r\n        {parentProps.data.answers.map((answer) => (\r\n          <ListItem className={classes.listItem}>\r\n          <ListItemText primary={\"Question  \" + answer.question} />\r\n          <Typography variant=\"subtitle1\" className={classes.total}>\r\n            {(answer.answer == 1).toString().toUpperCase()}\r\n          </Typography>\r\n        </ListItem>\r\n        ))}\r\n        <Divider />\r\n          <ListItem className={classes.listItem}>\r\n            <ListItemText primary=\"Total correct\" />\r\n            <Typography variant=\"subtitle1\" className={classes.total}>\r\n              {parentProps.data.total_correct}\r\n            </Typography>\r\n          </ListItem>\r\n          <ListItem className={classes.listItem}>\r\n            <ListItemText primary=\"Total wrong\" />\r\n            <Typography variant=\"subtitle1\" className={classes.total}>\r\n            {parentProps.data.total_wrong}\r\n            </Typography>\r\n          </ListItem>\r\n        </List>\r\n      </React.Fragment>\r\n      );\r\n  } else {\r\n    return (\r\n    <React.Fragment>\r\n      Results\r\n    </React.Fragment>\r\n    );\r\n  }\r\n  \r\n  \r\n}","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Stepper from '@material-ui/core/Stepper';\r\nimport Step from '@material-ui/core/Step';\r\nimport StepLabel from '@material-ui/core/StepLabel';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Container from '@material-ui/core/Container';\r\nimport AddTestImages from './AddTestImages';\r\nimport AddTestSolutionForm from './AddTestSolutionForm';\r\nimport GraderResults from './GraderResults';\r\nimport _ from 'lodash';\r\nimport './App.css';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  appBar: {\r\n    position: 'relative',\r\n    background: '#282c34',\r\n    color: 'white',\r\n    alignItems: 'center',\r\n  },\r\n  footer: {\r\n    padding: theme.spacing(3, 2),\r\n    marginTop: 'auto',\r\n    background: '#282c34',\r\n    color: 'white',\r\n  },\r\n  layout: {\r\n    width: 'auto',\r\n    marginLeft: theme.spacing(2),\r\n    marginRight: theme.spacing(2),\r\n    [theme.breakpoints.up(600 + theme.spacing(2) * 2)]: {\r\n      width: 600,\r\n      marginLeft: 'auto',\r\n      marginRight: 'auto',\r\n    },\r\n  },\r\n  paper: {\r\n    marginTop: theme.spacing(3),\r\n    marginBottom: theme.spacing(3),\r\n    padding: theme.spacing(2),\r\n    [theme.breakpoints.up(600 + theme.spacing(3) * 2)]: {\r\n      marginTop: theme.spacing(6),\r\n      marginBottom: theme.spacing(6),\r\n      padding: theme.spacing(3),\r\n    },\r\n  },\r\n  stepper: {\r\n    padding: theme.spacing(3, 0, 5),\r\n  },\r\n  buttons: {\r\n    display: 'flex',\r\n    justifyContent: 'flex-end',\r\n  },\r\n  button: {\r\n    marginTop: theme.spacing(3),\r\n    marginLeft: theme.spacing(1),\r\n  },\r\n}));\r\n\r\nconst steps = ['Tests images', 'Correct answers', 'Results'];\r\n\r\nfunction App() {\r\n  const [testImages, setTestImages] = React.useState(0);\r\n  const [isSubmit, setIsSubmit] = React.useState(0);\r\n  const [testSolutionInfo, setTestSolutionInfo] = React.useState({});\r\n  const [checkerResults, setCheckerResults] = React.useState({});\r\n  const classes = useStyles();\r\n  const [activeStep, setActiveStep] = React.useState(0);\r\n\r\n  const AddTestImagesCallback = (testImages) => {\r\n    setTestImages(testImages)\r\n  }\r\n  const SetTestSolutionInfoCallback = (testSolution) => {\r\n    setTestSolutionInfo(testSolution)\r\n  }\r\n  function getStepContent(step) {\r\n    switch (step) {\r\n      case 0:\r\n        return <AddTestImages parentCallback={AddTestImagesCallback} />;\r\n      case 1:\r\n        return <AddTestSolutionForm parentCallback={SetTestSolutionInfoCallback} />;\r\n      case 2:\r\n        return <GraderResults data={checkerResults}/>;\r\n      default:\r\n        throw new Error('Unknown step');\r\n    }\r\n  }\r\n  const handleNext = () => {\r\n    if (activeStep === steps.length - 2) {\r\n      \r\n      let formData = new FormData();\r\n      if(testSolutionInfo.numberOfQuestions === null || testSolutionInfo.numberOfQuestions === 0)\r\n      {\r\n          alert(\"please enter the number of questions in the test\");\r\n          return;\r\n      }\r\n      if(testSolutionInfo.answersSolutionsList === null || testSolutionInfo.answersSolutionsList === {} || _.size(testSolutionInfo.answersSolutionsList) !== parseInt(testSolutionInfo.numberOfQuestions) )\r\n      {\r\n          alert(\"please enter answers for the number of questions in the test\");\r\n          return;\r\n      }\r\n      formData.append('questions_count', testSolutionInfo.numberOfQuestions);\r\n      for (var key in testSolutionInfo.answersSolutionsList) {\r\n        formData.append(key, testSolutionInfo.answersSolutionsList[key].answer);\r\n      }\r\n      formData.append('images', testImages, testImages.name)\r\n      const options = {\r\n        headers: {\r\n          'Accept': 'application/json',\r\n        },\r\n        method: 'POST',\r\n        body: formData,\r\n      };\r\n      setIsSubmit(1);\r\n\r\n      fetch('/api/checkTest', options).then(res => res.json()).then(data => {\r\n            const currID = setInterval(async () => {\r\n            const res = await fetch(`/api/returnResults/`+ data['task_id'], {\r\n             headers : { \r\n              'Content-Type': 'application/json',\r\n              'Accept': 'application/json'\r\n             }});\r\n            const new_data = await res.json();\r\n              if(new_data['status'] == 'finished'){\r\n                setCheckerResults(new_data['result']);\r\n                setIsSubmit(0);\r\n                clearInterval(currID);\r\n                setActiveStep(activeStep + 1);\r\n              }\r\n              else if(new_data['status'] == 'not started')\r\n              {\r\n                clearInterval(currID);\r\n                alert('internal error, please try again');\r\n              }\r\n            }, 20000);\r\n      });\r\n    }\r\n\r\n    if (activeStep === steps.length - 3) {\r\n    if(testImages === null || testImages === 0)\r\n      {\r\n          alert(\"please enter an image of a test to check\");\r\n          return;\r\n      }\r\n      setActiveStep(activeStep + 1);\r\n    }\r\n    if (activeStep === steps.length - 1) {\r\n      setActiveStep(activeStep + 1);\r\n    }\r\n  };\r\n\r\n  const restartApp = () => {\r\n    setTestImages(0);\r\n    setTestSolutionInfo({});\r\n    setCheckerResults({});\r\n    setActiveStep(0);\r\n    setIsSubmit(0);\r\n  };\r\n  const handleBack = () => {\r\n    setActiveStep(activeStep - 1);\r\n  };\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <React.Fragment >\r\n        <CssBaseline />\r\n        <AppBar position=\"absolute\" color=\"default\" className={classes.appBar}>\r\n          <Toolbar>\r\n            <Typography variant=\"h6\" color=\"inherit\" noWrap>\r\n              Automatic multiple choice checker\r\n            </Typography>\r\n          </Toolbar>\r\n        </AppBar>\r\n        <main className={classes.layout}>\r\n          <Paper className={classes.paper}>\r\n            <Stepper activeStep={activeStep} className={classes.stepper}>\r\n              {steps.map((label) => (\r\n                <Step key={label}>\r\n                  <StepLabel>{label}</StepLabel>\r\n                </Step>\r\n              ))}\r\n            </Stepper>\r\n            <React.Fragment>\r\n              {activeStep === steps.length ? (\r\n                <React.Fragment>\r\n                  <Typography variant=\"h5\" gutterBottom>\r\n                    Thank you for using our service 👏🏻\r\n                  </Typography>\r\n                  <Button\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                        onClick={restartApp}\r\n                        className={classes.button}\r\n                      >\r\n                        Again\r\n                      </Button>\r\n                </React.Fragment>\r\n              ) : (\r\n                  <React.Fragment>\r\n                    {getStepContent(activeStep)}\r\n                    <div className={classes.buttons}>\r\n                      {activeStep !== 0 && activeStep !== 2 && (\r\n                        <Button onClick={handleBack} className={classes.button}>\r\n                          Back\r\n                        </Button>\r\n                      )}\r\n                      <Button\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                        onClick={handleNext}\r\n                        className={classes.button}\r\n                        disabled={isSubmit}\r\n                      >\r\n                        {/* <CircularProgress/> */}\r\n                        {activeStep === steps.length - 2 ? 'Submit' : 'Next'}\r\n                      </Button>\r\n                    </div>\r\n                  </React.Fragment>\r\n                )}\r\n\r\n            </React.Fragment>\r\n          </Paper>\r\n        </main>\r\n        <footer className={classes.footer}>\r\n          <Container maxWidth=\"sm\">\r\n            <Typography variant=\"body2\" color=\"inherit\" align=\"center\">\r\n              {'Copyright © Roy and Batel '}\r\n              {new Date().getFullYear()}\r\n              {'.'}\r\n            </Typography>\r\n          </Container>\r\n        </footer>\r\n      </React.Fragment>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}