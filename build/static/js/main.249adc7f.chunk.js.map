{"version":3,"sources":["AddTestImages.js","AddCorrectSolution.js","SolutionItem.js","EditCorretSolution.js","CorrectSolutionsList.js","AddTestSolutionForm.js","GraderResults.js","App.js","reportWebVitals.js","index.js"],"names":["thumbsContainer","display","flexDirection","flexWrap","marginTop","thumb","borderRadius","border","marginBottom","marginRight","width","height","padding","boxSizing","thumbInner","minWidth","overflow","img","Container","styled","div","props","isDragAccept","isDragReject","isDragActive","getColor","AddTestImages","parentProps","useState","files","setFiles","useDropzone","accept","onDrop","acceptedFiles","map","file","Object","assign","preview","URL","createObjectURL","parentCallback","getRootProps","getInputProps","thumbs","style","src","name","useEffect","forEach","revokeObjectURL","Fragment","Typography","variant","gutterBottom","className","AddCorrectSolution","inputRef","React","createRef","errorRef","handleSubmit","e","console","log","current","value","preventDefault","classList","add","remove","addToList","currentTarget","reset","onSubmit","this","Input","placeholder","type","inputProps","onChange","handleChange","marginLeft","Button","color","ref","Component","styles","Icon","Paper","margin","alignItems","numbering","fontWeight","answer","SolutionItem","state","fade","gridRef","deleteAnswer","setState","Promise","resolve","reject","setTimeout","then","index","gridClass","Grid","xs","item","elevation","IconButton","aria-label","onClick","updateAnswer","Edit","fontSize","Delete","EditCorretSolution","saveAnswer","defaultValue","Save","CorrectSolutionsList","renderAnswer","key","list","container","keys","AddTestSolutionForm","listSize","_","size","answersSolutionsList","status","numberOfQuestions","handleNumberOfQuestionsChange","bind","event","target","spacing","md","TextField","required","fullWidth","id","label","useStyles","makeStyles","theme","listItem","total","title","GraderResults","classes","data","List","disablePadding","answers","ListItem","ListItemText","primary","question","toString","toUpperCase","Divider","total_correct","total_wrong","appBar","position","background","footer","layout","breakpoints","up","paper","stepper","buttons","justifyContent","button","progress","steps","App","testImages","setTestImages","isSubmit","setIsSubmit","testSolutionInfo","setTestSolutionInfo","checkerResults","setCheckerResults","activeStep","setActiveStep","AddTestImagesCallback","SetTestSolutionInfoCallback","testSolution","CssBaseline","AppBar","Toolbar","noWrap","Stepper","Step","StepLabel","length","step","Error","getStepContent","disabled","CircularProgress","formData","FormData","alert","parseInt","append","options","headers","method","body","fetch","res","json","currID","setInterval","a","new_data","clearInterval","maxWidth","align","Date","getFullYear","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.249adc7f.chunk.js","sourcesContent":["import React, {useState, useEffect} from 'react';\r\nimport {useDropzone} from 'react-dropzone';\r\nimport styled from 'styled-components';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nconst thumbsContainer = {\r\n  display: 'flex',\r\n  flexDirection: 'row',\r\n  flexWrap: 'wrap',\r\n  marginTop: 16\r\n};\r\n\r\nconst thumb = {\r\n  display: 'inline-flex',\r\n  borderRadius: 2,\r\n  border: '1px solid #eaeaea',\r\n  marginBottom: 8,\r\n  marginRight: 8,\r\n  width: 100,\r\n  height: 100,\r\n  padding: 4,\r\n  boxSizing: 'border-box'\r\n};\r\n\r\nconst thumbInner = {\r\n  display: 'flex',\r\n  minWidth: 0,\r\n  overflow: 'hidden'\r\n};\r\n\r\nconst img = {\r\n  display: 'block',\r\n  width: 'auto',\r\n  height: '100%'\r\n};\r\n\r\nconst getColor = (props) => {\r\n  if (props.isDragAccept) {\r\n      return '#00e676';\r\n  }\r\n  if (props.isDragReject) {\r\n      return '#ff1744';\r\n  }\r\n  if (props.isDragActive) {\r\n      return '#2196f3';\r\n  }\r\n  return '#eeeeee';\r\n}\r\n\r\nconst Container = styled.div`\r\n  flex: 1;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  padding: 20px;\r\n  border-width: 2px;\r\n  border-radius: 2px;\r\n  border-color: ${props => getColor(props)};\r\n  border-style: dashed;\r\n  background-color: #fafafa;\r\n  color: #bdbdbd;\r\n  outline: none;\r\n  transition: border .24s ease-in-out;\r\n`;  \r\n\r\nexport default function AddTestImages(props) {\r\n    const parentProps = {...props};\r\n    const [files, setFiles] = useState([]);\r\n    const {getRootProps, getInputProps,isDragActive,\r\n      isDragAccept, isDragReject} = useDropzone({\r\n      accept: 'image/*',\r\n      onDrop: acceptedFiles => {\r\n        setFiles(acceptedFiles.map(file => Object.assign(file, {\r\n          preview: URL.createObjectURL(file)\r\n        })));\r\n        parentProps.parentCallback(acceptedFiles[0]);\r\n      }\r\n    });\r\n    const thumbs = files.map(file => (\r\n      <div style={thumb} key={file.name}>\r\n        <div style={thumbInner}>\r\n          <img\r\n            src={file.preview}\r\n            style={img}\r\n          />\r\n        </div>\r\n      </div>\r\n    ));\r\n  \r\n    useEffect(() => () => {\r\n      // Make sure to revoke the data uris to avoid memory leaks\r\n      files.forEach(file => URL.revokeObjectURL(file.preview));\r\n    }, [files]);\r\n  \r\n  return (\r\n    <React.Fragment>\r\n    <Typography variant=\"h6\" gutterBottom>\r\n      Upload images to check\r\n    </Typography>\r\n    <div className=\"container\">\r\n      <Container {...getRootProps({className: 'dropzone',isDragActive, isDragAccept, isDragReject})}>\r\n        <input {...getInputProps()} />\r\n        <p>Drag 'n' drop some files here, or click to select files</p>\r\n        <em>(Only *.jpeg and *.png images will be accepted)</em>   \r\n      </Container>\r\n      <aside style={thumbsContainer}>\r\n        {thumbs}\r\n      </aside>\r\n    </div>\r\n    </React.Fragment>\r\n  );\r\n};\r\n","import React, { Component } from \"react\";\r\nimport Input from \"@material-ui/core/Input\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport './App.css';\r\n\r\nclass AddCorrectSolution extends Component {\r\n  inputRef = React.createRef();\r\n  errorRef = React.createRef();\r\n  handleSubmit = e => {\r\n    console.log(this.inputRef.current.value);\r\n    e.preventDefault();\r\n    if (this.inputRef.current.value === \"\") {\r\n      this.errorRef.current.classList.add(\"active\");\r\n      return null;\r\n    }\r\n    this.errorRef.current.classList.remove(\"active\");\r\n\r\n    this.props.addToList(this.inputRef.current.value);\r\n    e.currentTarget.reset();\r\n  };\r\n  render() {\r\n    return (\r\n      <form onSubmit={this.handleSubmit} style={{ display: \"flex\" }}>\r\n        <Input\r\n          placeholder=\"Solution number\"\r\n          type=\"number\"\r\n          inputProps={{\r\n            \"aria-label\": \"Description\"\r\n          }}\r\n          onChange={this.handleChange}\r\n          inputRef={this.inputRef}\r\n          style={{ marginLeft: \"10px\",marginRight: \"30px\",width: \"80%\" }}\r\n        />\r\n\r\n        <Button\r\n          type=\"submit\"\r\n          variant=\"contained\"\r\n          color=\"primary\"\r\n        >\r\n          Add\r\n        </Button>\r\n\r\n        <p ref={this.errorRef} className=\"error\">\r\n          Error, must enter a value!\r\n        </p>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nexport default AddCorrectSolution;\r\n","import React, { Component } from \"react\";\r\nimport { Delete, Edit } from \"@material-ui/icons\";\r\nimport { Grid, Paper } from \"@material-ui/core\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\n\r\nconst styles = {\r\n  Icon: {\r\n    marginLeft: \"auto\"\r\n  },\r\n  Paper: {\r\n    margin: \"auto\",\r\n    padding: 10,\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    marginTop: 10,\r\n    width: 500\r\n  },\r\n  numbering: {\r\n    fontWeight: \"bold\",\r\n    marginRight: 10\r\n  },\r\n  answer: {\r\n    color: \"black\",\r\n  }\r\n};\r\n\r\nclass SolutionItem extends Component {\r\n  state = {\r\n    fade: false\r\n  };\r\n\r\n  gridRef = React.createRef();\r\n\r\n  deleteAnswer = () => {\r\n    const fade = true;\r\n    this.setState({ fade });\r\n\r\n    var promise = new Promise(function (resolve, reject) {\r\n      setTimeout(function () {\r\n        resolve(true);\r\n      }, 500);\r\n    });\r\n\r\n    promise.then(() => this.props.deleteAnswer(this.props.index));\r\n    console.log(this.state);\r\n  };\r\n\r\n  render() {\r\n    const gridClass = this.state.fade ? \"fade-out\" : \"\";\r\n\r\n    return (\r\n      <Grid\r\n        xs={12}\r\n        className={`${gridClass}`}\r\n        item\r\n        key={this.props.index}\r\n        ref={this.gridRef}\r\n      >\r\n        <Paper elevation={2} style={styles.Paper}>\r\n          <span style={styles.numbering}>{this.props.index})</span>\r\n          <span style={styles.answer}> {this.props.answer}</span>\r\n          <IconButton\r\n            color=\"primary\"\r\n            aria-label=\"Edit\"\r\n            style={styles.Icon}\r\n            onClick={() => this.props.updateAnswer(this.props.index)}\r\n          >\r\n            <Edit fontSize=\"small\" />\r\n          </IconButton>\r\n          <IconButton\r\n            color=\"secondary\"\r\n            aria-label=\"Delete\"\r\n            onClick={this.deleteAnswer}\r\n          >\r\n            <Delete fontSize=\"small\" />\r\n          </IconButton>\r\n        </Paper>\r\n      </Grid>\r\n    );\r\n  }\r\n}\r\n\r\nexport default SolutionItem;\r\n","import React, { Component } from \"react\";\r\nimport { Save } from \"@material-ui/icons\";\r\nimport { Grid, Paper } from \"@material-ui/core\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport Input from \"@material-ui/core/Input\";\r\n\r\nconst styles = {\r\n  Icon: {\r\n    marginLeft: \"auto\",\r\n    width: \"10%\"\r\n  },\r\n  Paper: {\r\n    margin: \"auto\",\r\n    padding: 10,\r\n    alignItems: \"center\",\r\n    marginTop: 10,\r\n    width: 500\r\n  }\r\n};\r\n\r\nclass EditCorretSolution extends Component {\r\n  inputRef = React.createRef();\r\n  render() {\r\n    return (\r\n      <Grid xs={12} item key={this.props.index}>\r\n        <Paper elevation={2} style={styles.Paper}>\r\n          <form\r\n            onSubmit={() => {\r\n              this.props.saveAnswer(\r\n                this.props.index,\r\n                this.inputRef.current.value\r\n              );\r\n            }}\r\n            style={{ display: \"flex\" }}\r\n          >\r\n            <Input\r\n              style={{ width: \"90%\" }}\r\n              type = \"number\"\r\n              defaultValue={this.props.answer}\r\n              inputRef={this.inputRef}\r\n            />\r\n            <IconButton\r\n              type=\"submit\"\r\n              color=\"primary\"\r\n              aria-label=\"Add\"\r\n              style={styles.Icon}\r\n            >\r\n              <Save fontSize=\"small\" />\r\n            </IconButton>\r\n          </form>\r\n        </Paper>\r\n      </Grid>\r\n    );\r\n  }\r\n}\r\n\r\nexport default EditCorretSolution;\r\n","import React from \"react\";\r\nimport SolutionItem from \"./SolutionItem\";\r\nimport EditCorretSolution from \"./EditCorretSolution\";\r\nimport { Grid } from \"@material-ui/core\";\r\n\r\nclass CorrectSolutionsList extends React.Component {\r\n  renderAnswer = key => {\r\n    if (this.props.list[key] == null) return null;\r\n    if (this.props.list[key][\"status\"] === \"active\") {\r\n      return (\r\n        <SolutionItem\r\n          key={key}\r\n          index={key}\r\n          answer={this.props.list[key][\"answer\"]}\r\n          deleteAnswer={this.props.deleteAnswer}\r\n          updateAnswer={this.props.updateAnswer}\r\n        />\r\n      );\r\n    } else if (this.props.list[key][\"status\"] === \"editing\") {\r\n      return (\r\n        <EditCorretSolution\r\n          key={key}\r\n          index={key}\r\n          answer={this.props.list[key][\"answer\"]}\r\n          saveAnswer={this.props.saveAnswer}\r\n        />\r\n      );\r\n    }\r\n  };\r\n  render() {\r\n    return (\r\n      <Grid container>\r\n        {Object.keys(this.props.list).map(key => this.renderAnswer(key))}\r\n      </Grid>\r\n    );\r\n  }\r\n}\r\n\r\nexport default CorrectSolutionsList;\r\n","import React, { Component } from 'react';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport AddCorrectSolution from \"./AddCorrectSolution\";\r\nimport CorrectSolutionsList from \"./CorrectSolutionsList\";\r\nimport _ from 'lodash';\r\n\r\nexport default class AddTestSolutionForm extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      numberOfQuestions: 0,\r\n      answersSolutionsList: {},\r\n    };\r\n\r\n    this.handleNumberOfQuestionsChange = this.handleNumberOfQuestionsChange.bind(this);\r\n  }\r\n  \r\n\r\n  handleNumberOfQuestionsChange(event) {\r\n    this.setState({numberOfQuestions: event.target.value});\r\n    this.props.parentCallback({\r\n      numberOfQuestions: event.target.value,\r\n      answersSolutionsList: this.state.answersSolutionsList\r\n    });\r\n  }\r\n\r\n  addToList = (answer) => {\r\n    let listSize = _.size(this.state.answersSolutionsList) + 1;\r\n    let list = { ...this.state.answersSolutionsList };\r\n    list[listSize] = {\r\n      answer: answer,\r\n      status: \"active\"\r\n    };\r\n    this.setState({ answersSolutionsList: list });\r\n    this.props.parentCallback({\r\n      numberOfQuestions: this.state.numberOfQuestions,\r\n      answersSolutionsList: list\r\n    });\r\n\r\n  };\r\n  deleteAnswer = (key) => {\r\n    let list = { ...this.state.answersSolutionsList };\r\n    list[key] = null;\r\n\r\n    this.setState({ answersSolutionsList: list });\r\n    this.props.parentCallback({\r\n      numberOfQuestions: this.state.numberOfQuestions,\r\n      answersSolutionsList: list\r\n    });\r\n  };\r\n  updateAnswer = (key) => {\r\n    let list = { ...this.state.answersSolutionsList };\r\n    list[key][\"status\"] = \"editing\";\r\n\r\n    this.setState({ answersSolutionsList: list });\r\n        this.props.parentCallback({\r\n      numberOfQuestions: this.state.numberOfQuestions,\r\n      answersSolutionsList: list\r\n    });\r\n  };\r\n  saveAnswer = (key, answer) => {\r\n    let list = { ...this.state.answersSolutionsList };\r\n    list[key] = {\r\n      answer: answer,\r\n      status: \"active\"\r\n    };\r\n\r\n    this.setState({ answersSolutionsList: list });\r\n    this.props.parentCallback({\r\n      numberOfQuestions: this.state.numberOfQuestions,\r\n      answersSolutionsList: list\r\n    });\r\n  };\r\n\r\n\r\n  render (){\r\n    return (\r\n    <React.Fragment>\r\n      <Typography variant=\"h6\" gutterBottom>\r\n        Fill the correct solutions for the test\r\n      </Typography>\r\n      <Grid container spacing={3}>\r\n        <Grid item xs={12} md={12}>\r\n        <TextField required type=\"number\" fullWidth id=\"standard-basic\" label=\"Number of questions In test\" value={this.state.numberOfQuestions} onChange={this.handleNumberOfQuestionsChange}/>\r\n        </Grid>\r\n        <Grid container spacing={0}>\r\n          <Grid item xs={12}>\r\n              <AddCorrectSolution addToList={this.addToList} />\r\n          </Grid>\r\n            <CorrectSolutionsList\r\n              deleteAnswer={this.deleteAnswer}\r\n              list={this.state.answersSolutionsList}\r\n              updateAnswer={this.updateAnswer}\r\n              saveAnswer={this.saveAnswer}\r\n            />\r\n        </Grid>\r\n      </Grid> \r\n    </React.Fragment>\r\n    );\r\n  }\r\n}","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport Divider from '@material-ui/core/Divider';\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  listItem: {\r\n    padding: theme.spacing(1, 0),\r\n  },\r\n  total: {\r\n    fontWeight: 700,\r\n  },\r\n  title: {\r\n    marginTop: theme.spacing(2),\r\n  },\r\n}));\r\nexport default function GraderResults(props) {\r\n  const classes = useStyles();\r\n  const parentProps = {...props};\r\n  if(parentProps.data && parentProps.data !== {})\r\n  {\r\n    return (\r\n      <React.Fragment>\r\n              <Typography variant=\"h6\" gutterBottom>\r\n          Results\r\n        </Typography>\r\n        <List disablePadding>\r\n        {parentProps.data.answers.map((answer) => (\r\n          <ListItem className={classes.listItem}>\r\n          <ListItemText primary={\"Question  \" + answer.question} />\r\n          <Typography variant=\"subtitle1\" className={classes.total}>\r\n            {(answer.answer == 1).toString().toUpperCase()}\r\n          </Typography>\r\n        </ListItem>\r\n        ))}\r\n        <Divider />\r\n          <ListItem className={classes.listItem}>\r\n            <ListItemText primary=\"Total correct\" />\r\n            <Typography variant=\"subtitle1\" className={classes.total}>\r\n              {parentProps.data.total_correct}\r\n            </Typography>\r\n          </ListItem>\r\n          <ListItem className={classes.listItem}>\r\n            <ListItemText primary=\"Total wrong\" />\r\n            <Typography variant=\"subtitle1\" className={classes.total}>\r\n            {parentProps.data.total_wrong}\r\n            </Typography>\r\n          </ListItem>\r\n        </List>\r\n      </React.Fragment>\r\n      );\r\n  } else {\r\n    return (\r\n    <React.Fragment>\r\n      Results\r\n    </React.Fragment>\r\n    );\r\n  }\r\n  \r\n  \r\n}","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Stepper from '@material-ui/core/Stepper';\r\nimport Step from '@material-ui/core/Step';\r\nimport StepLabel from '@material-ui/core/StepLabel';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Container from '@material-ui/core/Container';\r\nimport AddTestImages from './AddTestImages';\r\nimport AddTestSolutionForm from './AddTestSolutionForm';\r\nimport GraderResults from './GraderResults';\r\nimport _ from 'lodash';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport './App.css';\r\nimport { green } from '@material-ui/core/colors';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  appBar: {\r\n    position: 'relative',\r\n    background: '#282c34',\r\n    color: 'white',\r\n    alignItems: 'center',\r\n  },\r\n  footer: {\r\n    padding: theme.spacing(3, 2),\r\n    marginTop: 'auto',\r\n    background: '#282c34',\r\n    color: 'white',\r\n  },\r\n  layout: {\r\n    width: 'auto',\r\n    marginLeft: theme.spacing(2),\r\n    marginRight: theme.spacing(2),\r\n    [theme.breakpoints.up(600 + theme.spacing(2) * 2)]: {\r\n      width: 600,\r\n      marginLeft: 'auto',\r\n      marginRight: 'auto',\r\n    },\r\n  },\r\n  paper: {\r\n    marginTop: theme.spacing(3),\r\n    marginBottom: theme.spacing(3),\r\n    padding: theme.spacing(2),\r\n    [theme.breakpoints.up(600 + theme.spacing(3) * 2)]: {\r\n      marginTop: theme.spacing(6),\r\n      marginBottom: theme.spacing(6),\r\n      padding: theme.spacing(3),\r\n    },\r\n  },\r\n  stepper: {\r\n    padding: theme.spacing(3, 0, 5),\r\n  },\r\n  buttons: {\r\n    display: 'flex',\r\n    justifyContent: 'flex-end',\r\n  },\r\n  button: {\r\n    marginTop: theme.spacing(3),\r\n    marginLeft: theme.spacing(1),\r\n  },\r\n  progress: {\r\n    marginTop: 'auto',\r\n    color: 'green'\r\n  }\r\n}));\r\n\r\nconst steps = ['Tests images', 'Correct answers', 'Results'];\r\n\r\nfunction App() {\r\n  const [testImages, setTestImages] = React.useState(0);\r\n  const [isSubmit, setIsSubmit] = React.useState(0);\r\n  const [testSolutionInfo, setTestSolutionInfo] = React.useState({});\r\n  const [checkerResults, setCheckerResults] = React.useState({});\r\n  const classes = useStyles();\r\n  const [activeStep, setActiveStep] = React.useState(0);\r\n\r\n  const AddTestImagesCallback = (testImages) => {\r\n    setTestImages(testImages)\r\n  }\r\n  const SetTestSolutionInfoCallback = (testSolution) => {\r\n    setTestSolutionInfo(testSolution)\r\n  }\r\n  function getStepContent(step) {\r\n    switch (step) {\r\n      case 0:\r\n        return <AddTestImages parentCallback={AddTestImagesCallback} />;\r\n      case 1:\r\n        return <AddTestSolutionForm parentCallback={SetTestSolutionInfoCallback} />;\r\n      case 2:\r\n        return <GraderResults data={checkerResults}/>;\r\n      default:\r\n        throw new Error('Unknown step');\r\n    }\r\n  }\r\n  const handleNext = () => {\r\n    if (activeStep === steps.length - 2) {\r\n      \r\n      let formData = new FormData();\r\n      if(testSolutionInfo.numberOfQuestions === null || testSolutionInfo.numberOfQuestions === 0)\r\n      {\r\n          alert(\"please enter the number of questions in the test\");\r\n          return;\r\n      }\r\n      if(testSolutionInfo.answersSolutionsList === null || testSolutionInfo.answersSolutionsList === {} || _.size(testSolutionInfo.answersSolutionsList) !== parseInt(testSolutionInfo.numberOfQuestions) )\r\n      {\r\n          alert(\"please enter answers for the number of questions in the test\");\r\n          return;\r\n      }\r\n      formData.append('questions_count', testSolutionInfo.numberOfQuestions);\r\n      for (var key in testSolutionInfo.answersSolutionsList) {\r\n        formData.append(key, testSolutionInfo.answersSolutionsList[key].answer);\r\n      }\r\n      formData.append('images', testImages, testImages.name)\r\n      const options = {\r\n        headers: {\r\n          'Accept': 'application/json',\r\n        },\r\n        method: 'POST',\r\n        body: formData,\r\n      };\r\n      setIsSubmit(1);\r\n\r\n      fetch('/api/checkTest', options).then(res => res.json()).then(data => {\r\n            const currID = setInterval(async () => {\r\n            const res = await fetch(`/api/returnResults/`+ data['task_id'], {\r\n             headers : { \r\n              'Content-Type': 'application/json',\r\n              'Accept': 'application/json'\r\n             }});\r\n            const new_data = await res.json();\r\n              if(new_data['status'] == 'finished'){\r\n                setCheckerResults(new_data['result']);\r\n                setIsSubmit(0);\r\n                clearInterval(currID);\r\n                setActiveStep(activeStep + 1);\r\n              }\r\n              else if(new_data['status'] == 'not started')\r\n              {\r\n                clearInterval(currID);\r\n                alert('internal error, please try again');\r\n              }\r\n            }, 45000);\r\n      });\r\n    }\r\n\r\n    if (activeStep === steps.length - 3) {\r\n    if(testImages === null || testImages === 0)\r\n      {\r\n          alert(\"please enter an image of a test to check\");\r\n          return;\r\n      }\r\n      setActiveStep(activeStep + 1);\r\n    }\r\n    if (activeStep === steps.length - 1) {\r\n      setActiveStep(activeStep + 1);\r\n    }\r\n  };\r\n\r\n  const restartApp = () => {\r\n    setTestImages(0);\r\n    setTestSolutionInfo({});\r\n    setCheckerResults({});\r\n    setActiveStep(0);\r\n    setIsSubmit(0);\r\n  };\r\n  const handleBack = () => {\r\n    setActiveStep(activeStep - 1);\r\n  };\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <React.Fragment >\r\n        <CssBaseline />\r\n        <AppBar position=\"absolute\" color=\"default\" className={classes.appBar}>\r\n          <Toolbar>\r\n            <Typography variant=\"h6\" color=\"inherit\" noWrap>\r\n              Automatic multiple choice checker\r\n            </Typography>\r\n          </Toolbar>\r\n        </AppBar>\r\n        <main className={classes.layout}>\r\n          <Paper className={classes.paper}>\r\n            <Stepper activeStep={activeStep} className={classes.stepper}>\r\n              {steps.map((label) => (\r\n                <Step key={label}>\r\n                  <StepLabel>{label}</StepLabel>\r\n                </Step>\r\n              ))}\r\n            </Stepper>\r\n            <React.Fragment>\r\n              {activeStep === steps.length ? (\r\n                <React.Fragment>\r\n                  <Typography variant=\"h5\" gutterBottom>\r\n                    Thank you for using our service 👏🏻\r\n                  </Typography>\r\n                  <Button\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                        onClick={restartApp}\r\n                        className={classes.button}\r\n                      >\r\n                        Again\r\n                      </Button>\r\n                </React.Fragment>\r\n              ) : (\r\n                  <React.Fragment>\r\n                    {getStepContent(activeStep)}\r\n                    <div className={classes.buttons}>\r\n                      {activeStep !== 0 && activeStep !== 2 && (\r\n                        <Button onClick={handleBack} className={classes.button} disabled={isSubmit}>\r\n                          Back\r\n                        </Button>\r\n                      )}\r\n                      { isSubmit ? <CircularProgress className={classes.progress}/> : <Button\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                        onClick={handleNext}\r\n                        className={classes.button}\r\n                        disabled={isSubmit}\r\n                      >{activeStep === steps.length - 2 ? 'Submit' : 'Next'}\r\n                      </Button>}\r\n                    </div>\r\n                  </React.Fragment>\r\n                )}\r\n              { isSubmit ? <span>Please wait for the results 🔎</span> : null} \r\n            </React.Fragment>\r\n          </Paper>\r\n        </main>\r\n        <footer className={classes.footer}>\r\n          <Container maxWidth=\"sm\">\r\n            <Typography variant=\"body2\" color=\"inherit\" align=\"center\">\r\n              {'Copyright © Roy and Batel '}\r\n              {new Date().getFullYear()}\r\n              {'.'}\r\n            </Typography>\r\n          </Container>\r\n        </footer>\r\n      </React.Fragment>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}