{"version":3,"sources":["AddTestImages.js","AddCorrectSolution.js","SolutionItem.js","EditCorretSolution.js","CorrectSolutionsList.js","AddTestSolutionForm.js","GraderResults.js","App.js","reportWebVitals.js","index.js"],"names":["Container","styled","div","props","isDragAccept","isDragReject","isDragActive","getColor","StyledDropzone","onDrop","useCallback","acceptedFiles","formData","FormData","append","name","fetch","headers","method","body","then","res","json","data","alert","useDropzone","accept","getRootProps","getInputProps","Fragment","Typography","variant","gutterBottom","className","AddCorrectSolution","inputRef","React","createRef","errorRef","handleSubmit","e","console","log","current","value","preventDefault","classList","add","remove","addToList","currentTarget","reset","onSubmit","this","style","display","Input","placeholder","type","inputProps","onChange","handleChange","marginLeft","marginRight","width","Button","color","ref","Component","styles","Icon","Paper","margin","padding","alignItems","marginTop","numbering","SolutionItem","state","fade","gridRef","deleteTodo","setState","Promise","resolve","reject","setTimeout","index","gridClass","Grid","xs","item","elevation","Todo","todo","IconButton","aria-label","onClick","updateTodo","Edit","fontSize","Delete","EditCorretSolution","saveTodo","defaultValue","Save","CorrectSolutionsList","renderTodo","key","list","container","Object","keys","map","AddTestSolutionForm","listSize","_","size","status","spacing","md","TextField","required","fullWidth","id","label","GraderResults","useStyles","makeStyles","theme","appBar","position","background","footer","layout","breakpoints","up","paper","marginBottom","stepper","buttons","justifyContent","button","steps","getStepContent","step","Error","App","classes","useState","activeStep","setActiveStep","CssBaseline","AppBar","Toolbar","noWrap","Stepper","Step","StepLabel","length","maxWidth","align","Date","getFullYear","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.562d6c17.chunk.js","sourcesContent":["import React, {useCallback } from 'react';\r\nimport {useDropzone} from 'react-dropzone';\r\nimport styled from 'styled-components';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nconst getColor = (props) => {\r\n  if (props.isDragAccept) {\r\n      return '#00e676';\r\n  }\r\n  if (props.isDragReject) {\r\n      return '#ff1744';\r\n  }\r\n  if (props.isDragActive) {\r\n      return '#2196f3';\r\n  }\r\n  return '#eeeeee';\r\n}\r\n\r\nconst Container = styled.div`\r\n  flex: 1;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  padding: 20px;\r\n  border-width: 2px;\r\n  border-radius: 2px;\r\n  border-color: ${props => getColor(props)};\r\n  border-style: dashed;\r\n  background-color: #fafafa;\r\n  color: #bdbdbd;\r\n  outline: none;\r\n  transition: border .24s ease-in-out;\r\n`;  \r\n\r\n\r\nexport default function StyledDropzone(props) {\r\n    const onDrop = useCallback(acceptedFiles => {\r\n        let formData = new FormData();\r\n        formData.append('name', 'John');\r\n        formData.append('password', 'John123');\r\n        formData.append('tests',acceptedFiles[0],acceptedFiles[0].name)\r\n        const options = {\r\n          headers: {\r\n            'Accept': 'application/json',\r\n          },\r\n          method: 'POST',\r\n          body: formData,\r\n        };\r\n        fetch('/api/getimage', options).then(res => res.json()).then(data => {\r\n          alert('yay');\r\n        //   setCurrentImage(data.image);\r\n        });\r\n      }, []);\r\n    \r\n    //   const {getRootProps, getInputProps, isDragActive} = useDropzone({onDrop})\r\n\r\n  const {\r\n    getRootProps,\r\n    getInputProps,\r\n    isDragActive,\r\n    isDragAccept,\r\n    isDragReject\r\n  } = useDropzone({accept: 'image/*',onDrop});\r\n  \r\n  return (\r\n    <React.Fragment>\r\n    <Typography variant=\"h6\" gutterBottom>\r\n      Upload images to check\r\n    </Typography>\r\n    <div className=\"container\">\r\n      <Container {...getRootProps({isDragActive, isDragAccept, isDragReject})}>\r\n        <input {...getInputProps()} />\r\n        <p>Drag 'n' drop some files here, or click to select files</p>\r\n        <em>(Only *.jpeg and *.png images will be accepted)</em>\r\n      </Container>\r\n    </div>\r\n    </React.Fragment>\r\n  );\r\n};\r\n","import React, { Component } from \"react\";\r\nimport Input from \"@material-ui/core/Input\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport './App.css';\r\n\r\nclass AddCorrectSolution extends Component {\r\n  inputRef = React.createRef();\r\n  errorRef = React.createRef();\r\n  handleSubmit = e => {\r\n    console.log(this.inputRef.current.value);\r\n    e.preventDefault();\r\n    if (this.inputRef.current.value === \"\") {\r\n      this.errorRef.current.classList.add(\"active\");\r\n      return null;\r\n    }\r\n    this.errorRef.current.classList.remove(\"active\");\r\n\r\n    this.props.addToList(this.inputRef.current.value);\r\n    e.currentTarget.reset();\r\n  };\r\n  render() {\r\n    return (\r\n      <form onSubmit={this.handleSubmit} style={{ display: \"flex\" }}>\r\n        <Input\r\n          placeholder=\"Solution number\"\r\n          type=\"number\"\r\n          inputProps={{\r\n            \"aria-label\": \"Description\"\r\n          }}\r\n          onChange={this.handleChange}\r\n          inputRef={this.inputRef}\r\n          style={{ marginLeft: \"10px\",marginRight: \"30px\",width: \"80%\" }}\r\n        />\r\n\r\n        <Button\r\n          type=\"submit\"\r\n          variant=\"contained\"\r\n          color=\"primary\"\r\n        >\r\n          Add\r\n        </Button>\r\n\r\n        <p ref={this.errorRef} className=\"error\">\r\n          Error, must enter a value!\r\n        </p>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nexport default AddCorrectSolution;\r\n","import React, { Component } from \"react\";\r\nimport { Delete, Edit } from \"@material-ui/icons\";\r\nimport { Grid, Paper } from \"@material-ui/core\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\n\r\nconst styles = {\r\n  Icon: {\r\n    marginLeft: \"auto\"\r\n  },\r\n  Paper: {\r\n    margin: \"auto\",\r\n    padding: 10,\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    marginTop: 10,\r\n    width: 500\r\n  },\r\n  numbering: {\r\n    color: \"red\",\r\n    marginRight: 10\r\n  }\r\n};\r\n\r\nclass SolutionItem extends Component {\r\n  state = {\r\n    fade: false\r\n  };\r\n\r\n  gridRef = React.createRef();\r\n\r\n  deleteTodo = () => {\r\n    const fade = true;\r\n    this.setState({ fade });\r\n\r\n    var promise = new Promise(function (resolve, reject) {\r\n      setTimeout(function () {\r\n        resolve(true);\r\n      }, 500);\r\n    });\r\n\r\n    promise.then(() => this.props.deleteTodo(this.props.index));\r\n    console.log(this.state);\r\n  };\r\n\r\n  render() {\r\n    const gridClass = this.state.fade ? \"fade-out\" : \"\";\r\n\r\n    return (\r\n      <Grid\r\n        xs={12}\r\n        className={`${gridClass}`}\r\n        item\r\n        key={this.props.index}\r\n        ref={this.gridRef}\r\n      >\r\n        <Paper elevation={2} style={styles.Paper}>\r\n          <span style={styles.numbering}>{this.props.index})</span>\r\n          <span style={styles.Todo}> {this.props.todo}</span>\r\n          <IconButton\r\n            color=\"primary\"\r\n            aria-label=\"Edit\"\r\n            style={styles.Icon}\r\n            onClick={() => this.props.updateTodo(this.props.index)}\r\n          >\r\n            <Edit fontSize=\"small\" />\r\n          </IconButton>\r\n          <IconButton\r\n            color=\"secondary\"\r\n            aria-label=\"Delete\"\r\n            onClick={this.deleteTodo}\r\n          >\r\n            <Delete fontSize=\"small\" />\r\n          </IconButton>\r\n        </Paper>\r\n      </Grid>\r\n    );\r\n  }\r\n}\r\n\r\nexport default SolutionItem;\r\n","import React, { Component } from \"react\";\r\nimport { Save } from \"@material-ui/icons\";\r\nimport { Grid, Paper } from \"@material-ui/core\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport Input from \"@material-ui/core/Input\";\r\n\r\nconst styles = {\r\n  Icon: {\r\n    marginLeft: \"auto\",\r\n    width: \"10%\"\r\n  },\r\n  Paper: {\r\n    margin: \"auto\",\r\n    padding: 10,\r\n    alignItems: \"center\",\r\n    marginTop: 10,\r\n    width: 500\r\n  }\r\n};\r\n\r\nclass EditCorretSolution extends Component {\r\n  inputRef = React.createRef();\r\n  render() {\r\n    return (\r\n      <Grid xs={12} item key={this.props.index}>\r\n        <Paper elevation={2} style={styles.Paper}>\r\n          <form\r\n            onSubmit={() => {\r\n              this.props.saveTodo(\r\n                this.props.index,\r\n                this.inputRef.current.value\r\n              );\r\n            }}\r\n            style={{ display: \"flex\" }}\r\n          >\r\n            <Input\r\n              style={{ width: \"90%\" }}\r\n              type = \"number\"\r\n              defaultValue={this.props.todo}\r\n              inputRef={this.inputRef}\r\n            />\r\n            <IconButton\r\n              type=\"submit\"\r\n              color=\"primary\"\r\n              aria-label=\"Add\"\r\n              style={styles.Icon}\r\n            >\r\n              <Save fontSize=\"small\" />\r\n            </IconButton>\r\n          </form>\r\n        </Paper>\r\n      </Grid>\r\n    );\r\n  }\r\n}\r\n\r\nexport default EditCorretSolution;\r\n","import React from \"react\";\r\nimport SolutionItem from \"./SolutionItem\";\r\nimport EditCorretSolution from \"./EditCorretSolution\";\r\nimport { Grid } from \"@material-ui/core\";\r\n\r\nclass CorrectSolutionsList extends React.Component {\r\n  renderTodo = key => {\r\n    if (this.props.list[key] == null) return null;\r\n    if (this.props.list[key][\"status\"] === \"active\") {\r\n      return (\r\n        <SolutionItem\r\n          key={key}\r\n          index={key}\r\n          todo={this.props.list[key][\"todo\"]}\r\n          deleteTodo={this.props.deleteTodo}\r\n          updateTodo={this.props.updateTodo}\r\n        />\r\n      );\r\n    } else if (this.props.list[key][\"status\"] === \"editing\") {\r\n      return (\r\n        <EditCorretSolution\r\n          key={key}\r\n          index={key}\r\n          todo={this.props.list[key][\"todo\"]}\r\n          saveTodo={this.props.saveTodo}\r\n        />\r\n      );\r\n    }\r\n  };\r\n  render() {\r\n    return (\r\n      <Grid container>\r\n        {Object.keys(this.props.list).map(key => this.renderTodo(key))}\r\n      </Grid>\r\n    );\r\n  }\r\n}\r\n\r\nexport default CorrectSolutionsList;\r\n","import React, { Component } from 'react';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport AddCorrectSolution from \"./AddCorrectSolution\";\r\nimport CorrectSolutionsList from \"./CorrectSolutionsList\";\r\nimport _ from 'lodash';\r\n\r\nexport default class AddTestSolutionForm extends Component {\r\n\r\n  state = {\r\n    list: {},\r\n  };\r\n\r\n  addToList = (todo) => {\r\n    let listSize = _.size(this.state.list) + 1;\r\n    let list = { ...this.state.list };\r\n    list[listSize] = {\r\n      todo: todo,\r\n      status: \"active\"\r\n    };\r\n    this.setState({ list: list });\r\n  };\r\n  deleteTodo = (key) => {\r\n    let list = { ...this.state.list };\r\n    list[key] = null;\r\n\r\n    this.setState({ list });\r\n  };\r\n  updateTodo = (key) => {\r\n    let list = { ...this.state.list };\r\n    list[key][\"status\"] = \"editing\";\r\n\r\n    this.setState({ list });\r\n  };\r\n  saveTodo = (key, todo) => {\r\n    let list = { ...this.state.list };\r\n    list[key] = {\r\n      todo: todo,\r\n      status: \"active\"\r\n    };\r\n\r\n    this.setState({ list });\r\n  };\r\n  render (){\r\n    return (\r\n    <React.Fragment>\r\n      <Typography variant=\"h6\" gutterBottom>\r\n        Fill the correct solutions for the test\r\n      </Typography>\r\n      <Grid container spacing={3}>\r\n        <Grid item xs={12} md={12}>\r\n        <TextField required type=\"number\" fullWidth id=\"standard-basic\" label=\"Number of questions In test\" />\r\n        </Grid>\r\n        <Grid container spacing={0}>\r\n          <Grid item xs={12}>\r\n              <AddCorrectSolution addToList={this.addToList} />\r\n          </Grid>\r\n            <CorrectSolutionsList\r\n              deleteTodo={this.deleteTodo}\r\n              list={this.state.list}\r\n              updateTodo={this.updateTodo}\r\n              saveTodo={this.saveTodo}\r\n            />\r\n        </Grid>\r\n      </Grid> \r\n    </React.Fragment>\r\n    );\r\n  }\r\n}","import React from 'react';\r\n//import { makeStyles } from '@material-ui/core/styles';\r\n// import Typography from '@material-ui/core/Typography';\r\n// import List from '@material-ui/core/List';\r\n// import ListItem from '@material-ui/core/ListItem';\r\n// import ListItemText from '@material-ui/core/ListItemText';\r\n// import Grid from '@material-ui/core/Grid';\r\n\r\n\r\n// const useStyles = makeStyles((theme) => ({\r\n//   listItem: {\r\n//     padding: theme.spacing(1, 0),\r\n//   },\r\n//   total: {\r\n//     fontWeight: 700,\r\n//   },\r\n//   title: {\r\n//     marginTop: theme.spacing(2),\r\n//   },\r\n// }));\r\n\r\nexport default function GraderResults() {\r\n  //const classes = useStyles();\r\n\r\n  return (\r\n    <React.Fragment>\r\n      Need to output solution somehow\r\n    </React.Fragment>\r\n  );\r\n}","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Stepper from '@material-ui/core/Stepper';\r\nimport Step from '@material-ui/core/Step';\r\nimport StepLabel from '@material-ui/core/StepLabel';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Container from '@material-ui/core/Container';\r\nimport AddTestImages from './AddTestImages';\r\nimport AddTestSolutionForm from './AddTestSolutionForm';\r\nimport GraderResults from './GraderResults';\r\nimport './App.css';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  appBar: {\r\n    position: 'relative',\r\n    background: '#282c34',\r\n    color: 'white',\r\n    alignItems: 'center',\r\n  },\r\n  footer: {\r\n    padding: theme.spacing(3, 2),\r\n    marginTop: 'auto',\r\n    background: '#282c34',\r\n    color: 'white',\r\n  },\r\n  layout: {\r\n    width: 'auto',\r\n    marginLeft: theme.spacing(2),\r\n    marginRight: theme.spacing(2),\r\n    [theme.breakpoints.up(600 + theme.spacing(2) * 2)]: {\r\n      width: 600,\r\n      marginLeft: 'auto',\r\n      marginRight: 'auto',\r\n    },\r\n  },\r\n  paper: {\r\n    marginTop: theme.spacing(3),\r\n    marginBottom: theme.spacing(3),\r\n    padding: theme.spacing(2),\r\n    [theme.breakpoints.up(600 + theme.spacing(3) * 2)]: {\r\n      marginTop: theme.spacing(6),\r\n      marginBottom: theme.spacing(6),\r\n      padding: theme.spacing(3),\r\n    },\r\n  },\r\n  stepper: {\r\n    padding: theme.spacing(3, 0, 5),\r\n  },\r\n  buttons: {\r\n    display: 'flex',\r\n    justifyContent: 'flex-end',\r\n  },\r\n  button: {\r\n    marginTop: theme.spacing(3),\r\n    marginLeft: theme.spacing(1),\r\n  },\r\n}));\r\n\r\nconst steps = ['Tests images', 'Correct answers', 'Results'];\r\n\r\nfunction getStepContent(step) {\r\n  switch (step) {\r\n    case 0:\r\n      return <AddTestImages />;\r\n    case 1:\r\n      return <AddTestSolutionForm />;\r\n    case 2:\r\n      return <GraderResults />;\r\n    default:\r\n      throw new Error('Unknown step');\r\n  }\r\n}\r\nfunction App() {\r\n   // const [currImage, setCurrentImage] = useState('false');\r\n    const classes = useStyles();\r\n    const [activeStep, setActiveStep] = React.useState(0);\r\n  \r\n    const handleNext = () => {\r\n      setActiveStep(activeStep + 1);\r\n    };\r\n  \r\n    const handleBack = () => {\r\n      setActiveStep(activeStep - 1);\r\n    };\r\n  \r\n    return (\r\n      <React.Fragment className=\"App\">\r\n        <CssBaseline />\r\n        <AppBar position=\"absolute\" color=\"default\" className={classes.appBar}>\r\n          <Toolbar>\r\n            <Typography variant=\"h6\" color=\"inherit\"  noWrap>\r\n            Automatic multiple choice checker\r\n            </Typography>\r\n          </Toolbar>\r\n        </AppBar>\r\n        <main className={classes.layout}>\r\n          <Paper className={classes.paper}>\r\n            <Stepper activeStep={activeStep} className={classes.stepper}>\r\n              {steps.map((label) => (\r\n                <Step key={label}>\r\n                  <StepLabel>{label}</StepLabel>\r\n                </Step>\r\n              ))}\r\n            </Stepper>\r\n            <React.Fragment>\r\n              {activeStep === steps.length ? (\r\n                <React.Fragment>\r\n                  <Typography variant=\"h5\" gutterBottom>\r\n                    Thank you for using our service 👏🏻\r\n                  </Typography>\r\n                </React.Fragment>\r\n              ) : (\r\n                <React.Fragment>\r\n                  {getStepContent(activeStep)}\r\n                  <div className={classes.buttons}>\r\n                    {activeStep !== 0 && (\r\n                      <Button onClick={handleBack} className={classes.button}>\r\n                        Back\r\n                      </Button>\r\n                    )}\r\n                    <Button\r\n                      variant=\"contained\"\r\n                      color=\"primary\"\r\n                      onClick={handleNext}\r\n                      className={classes.button}\r\n                    >\r\n                      {activeStep === steps.length - 2 ? 'Submit' : 'Next'}\r\n                    </Button>\r\n                  </div>\r\n                </React.Fragment>\r\n              )}\r\n  \r\n            </React.Fragment>\r\n          </Paper>\r\n        </main>\r\n        <footer className={classes.footer}>\r\n          <Container maxWidth=\"sm\">\r\n          <Typography variant=\"body2\" color=\"inherit\"  align=\"center\">\r\n                {'Copyright © Roy and Batel '}\r\n                {new Date().getFullYear()}\r\n                {'.'}\r\n            </Typography>\r\n          </Container>\r\n        </footer>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}